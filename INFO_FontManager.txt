// As for now I don't really see a point behind font manager. Can't 
// remember what I thought about when I was creating this file... oops...
// Now I can't think of reason to have texture manager....

// such managers (below resource manager) could be used to get pointers in
// a faster way? or manage quality ?
// That makes actually sense - or not - dunno.
// QualityManager could be on top of this and such things like
// (font/texture manager) wont be necessary.

// Well now i know that font manager wont be necessary
// However Texture manager - yes. TexManager is used for triggering loading of 
// data to RAM and then to VRAM (make gl texture) - those mechanism should be
// stored inside of the texture manager - not in texture resource definition...

// Font is basically a texture - a 16x16 array in one image (ASCII font).

// Font manager will be needed more if other types of resource fonts are used (TTF ?)
// But what to do if somewhere FONT resource is called via STRING ID/TAG (NAME) ?
// It needs to be translated to HANDLE/POINTER - this is quite common mechanism so...
// - this is up to Resource Manager alone as it is special kind of pointer 
// dereferencing - slow as hell

// CONCLUSION: Font Manager is currently not needed! 
// CONCLUSION2: With QualityManager is even Texture Manager really needed ?
//	YES! Because texture upload to VRAM (graphics card ram) is bulk operation
//	and it should be delegated into one specific place - Texture Manager!
