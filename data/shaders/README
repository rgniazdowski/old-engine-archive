https://stackoverflow.com/questions/9209700/opengl-es-2-0-multiple-programs-or-multiple-shaders-or-what-how-does-it-work


If your application is written for OpenGL ES 2.0, do not create a single shader with lots of 
switches and conditionals that performs every task your application needs to render the scene. 
Instead, compile multiple shader programs that each perform a specific, focused task.

iOS OpenGL ES 2.0 Guidelines
http://developer.apple.com/library/ios/#documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/Performance/Performance.html#//apple_ref/doc/uid/TP40008793-CH105-SW11

Solution:
Zaleca sie kompilowanie wielu shader programow ktore beda wykonywac specifyczne zadania. Mozna 
uzywac takich samych vertex shaderow i kompilowac  razem specyficzne fragment shadery do jednego 
programu. Miedzy programami mozna przelaczac sie uzywajac funkcji glUseProgram();

Dobra praktyka byloby rowniez definiowac uzyty shader w strukturze *Material.

Ogolnie odradza sie stosowania rozbudowanych shaderow (skompilowanych w jeden program uzywanego przy
renderowaniu calej sceny), gdzie wykonywane funkcje sa zmieniane przez "przelaczniki" przekazywane 
w zmiennych uniform.

Follow up:
"I just wanted to come back and say that this is the exact way that I ended up doing it. This works
fantastically and you don't have to draw in any particular order to get the correct depth in OpenGL
thanks to the z-buffer."