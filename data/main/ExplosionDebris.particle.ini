[ParticleEffect]
; name – string – particle effect string identification
name='ExplosionDebris'

; shader/shader-name - string - name of the shader to use on this particle effect.
; this can be set also in the material - material will have higher priority
;
shader-name = "sOrthoEasy"

; max-count – integer – specifies the maximum number of the particles
; that can be stored by default by any created ParticleEmitter for this
; effect. The default value is 100.
max-count=64

; particle-area – boundingbox – held as string value, describes the area
; that constraints the particle effect. Format: (x,y,w,h) or (x,y,z,w,h,d).
; The numbers inside can be integers or floats. Units are always in scene
; space specific units.
;
; particle-area="(0,0,0,0)"

; area-check – bool – false/true – held as string value. If set to 'true'
; the particle area will constraint any particle emitted.
area-check=false

;random-velocity – bool – false/true – held as string value.
; If set to 'true' then when the particle is emitted it's
; velocity will be randomized.
random-velocity=true

;random-angle – bool – false/true – held as string value.
; If set to 'true' then the particles' angle is randomized
;on addition.
random-angle=true

; life-as-size – bool – false/true – held as string value.
; If set to 'true' the size of the particle will indicate it's
; life. All three dimensions are set to the same value.
life-as-size=false

; facing-velocity – bool – false/true – held as string value.
; If set to 'true' the particles pitch in the direction they're flying.
facing-velocity=false

; facing-camera - bool - false/true
facing-camera=true

; params-active – bool – false/true – held as string value.
params-active=true

; start-size – vector – held as string value. This set's the
; starting value of size for the particle.
start-size="(15.0,15.0,15.0)"

; end-size – vector – held as string value. This is the end size of
; the particle, when the particle reaches this size it is being deleted.
; This values may change the fade speed. The end size will be reached
; in TTL milliseconds.
end-size="(30.0,30.0,30.0)"

; spread-speed – vector – held as string value.
spread-speed="(250.0,250.0,250.0)"

; life-range – vector – held as string value.
; Two element vector specifying the minimum and maximum values of
; starting life for the particle on randomization.
life-range="(7.5, 12.5)"

; ttl-range – vector – held as string value. Two element vector specifying
; the minimum and maximum value for particles' TTL parameter while randomizing.
; TTL means time to live and it describes the number of milliseconds that
; the particle will live (after that it is removed).
;ttl-range="(500,750)"

; fade-speed-range – vector – held as string value. Two element vector specifying
; the minimum and maximum value of the fadeSpeed parameter of the particle while
; randomizing.
; fade-speed or ttl-range
;fade-speed-range="()"

;start-color – color – held as string value.
start-color="white"

;end-color – color – held as string value.
end-color="rgba(75, 75, 75, 0)"
;end-color="orange"

;sets the texture name or file name to be used
;texture – string
; DebrisSheetTex size 3x3
;texture="DebrisSheetTex"
texture="ExplosionSheet"

; Specifies the 2D integer vector for spritesheet dimensions. There are
; textures that hold many sprites textures in one file.
;textureSize – vector – held as string value.
;texture-sheet-size
;texture-size="(3,3)"
texture-size="(5,5)"

; Two element vector specifying the minimum and maximum values (from 0) for
; the textureID to use while adding randomized particle. These are not GFX
; texture ID! This is simple identification of the texture field in the
; spritesheet file, it is needed to determine texture coordinates for the
; particle. TextureSize and textureIDRange are optional as default values
; are [1,1] and 0.
;textureIDRange – vector – held as string value.
;texture-id-range="(0,8)"
texture-id-range="(10,18)"

